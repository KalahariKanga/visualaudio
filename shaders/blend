uniform float alpha;
uniform float driftX;
uniform float driftY;
uniform float zoom;
uniform float angle;

void main()
{
	vec4 lastColour;

	vec2 texcoord = vec2(gl_TexCoord[0]);
	gl_FragColor = texture2D(texture,texcoord);
	texcoord = texcoord - vec2(0.5,0.5);
	texcoord.y *= 1/aspectRatio;	
	
	mat2 rot;
	rot[0] = vec2(cos(angle),sin(angle));
	rot[1] = vec2(-sin(angle),cos(angle));

	vec2 drift = vec2(driftX,driftY);

	vec2 newcoord = (texcoord) * zoom * rot + drift;

	newcoord.y *= aspectRatio;
	
	newcoord = newcoord + vec2(0.5,0.5);

	if(newcoord.x > 1) newcoord.x = 2 - newcoord.x;
	if(newcoord.y > 1) newcoord.y = 2 - newcoord.y;
	if(newcoord.x < 0) newcoord.x *= -1;
	if(newcoord.y < 0) newcoord.y *= -1;
	
	lastColour = texture2D(lastFrame, newcoord) * alpha;
	lastColour.a = 1;
	
	//lazy blending
	//if(gl_FragColor.a < 1)
	//	gl_FragColor = lastColour;

	gl_FragColor = max(lastColour, gl_FragColor);
}
